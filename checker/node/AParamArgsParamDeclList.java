/* This file was generated by SableCC (http://www.sablecc.org/). */

package checker.node;

import java.util.*;
import checker.analysis.*;

@SuppressWarnings("nls")
public final class AParamArgsParamDeclList extends PParamDeclList
{
    private PParamArg _paramArg_;
    private final LinkedList<PCommaParamArgList> _commaParamArgList_ = new LinkedList<PCommaParamArgList>();

    public AParamArgsParamDeclList()
    {
        // Constructor
    }

    public AParamArgsParamDeclList(
        @SuppressWarnings("hiding") PParamArg _paramArg_,
        @SuppressWarnings("hiding") List<PCommaParamArgList> _commaParamArgList_)
    {
        // Constructor
        setParamArg(_paramArg_);

        setCommaParamArgList(_commaParamArgList_);

    }

    @Override
    public Object clone()
    {
        return new AParamArgsParamDeclList(
            cloneNode(this._paramArg_),
            cloneList(this._commaParamArgList_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAParamArgsParamDeclList(this);
    }

    public PParamArg getParamArg()
    {
        return this._paramArg_;
    }

    public void setParamArg(PParamArg node)
    {
        if(this._paramArg_ != null)
        {
            this._paramArg_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._paramArg_ = node;
    }

    public LinkedList<PCommaParamArgList> getCommaParamArgList()
    {
        return this._commaParamArgList_;
    }

    public void setCommaParamArgList(List<PCommaParamArgList> list)
    {
        this._commaParamArgList_.clear();
        this._commaParamArgList_.addAll(list);
        for(PCommaParamArgList e : list)
        {
            if(e.parent() != null)
            {
                e.parent().removeChild(e);
            }

            e.parent(this);
        }
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._paramArg_)
            + toString(this._commaParamArgList_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._paramArg_ == child)
        {
            this._paramArg_ = null;
            return;
        }

        if(this._commaParamArgList_.remove(child))
        {
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._paramArg_ == oldChild)
        {
            setParamArg((PParamArg) newChild);
            return;
        }

        for(ListIterator<PCommaParamArgList> i = this._commaParamArgList_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set((PCommaParamArgList) newChild);
                    newChild.parent(this);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        throw new RuntimeException("Not a child.");
    }
}
